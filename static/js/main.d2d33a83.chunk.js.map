{"version":3,"sources":["components/Header.jsx","components/HomeMap.jsx","components/SinglePlace.jsx","components/PlaceInfo.jsx","components/APIs.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","react_default","a","createElement","className","type","placeholder","index_esm","HomeMap","_ref","coordinates","setBounds","setCoordinates","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","useMapEvent","latLng","getBounds","_northEast","ne","sw","_southWest","_ref2","coords","useMap","setView","getZoom","SinglePlace","place","console","log","PlaceInfo","isLoading","places","_useState","useState","_useState2","Object","slicedToArray","setType","_useState3","_useState4","rating","setRating","htmlFor","name","onChange","e","target","value","components_SinglePlace","key","getPlaces","asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","params","bl_latitude","lat","tr_latitude","bl_longitude","lng","tr_longitude","headers","X-RapidAPI-Host","X-RapidAPI-Key","sent","abrupt","stop","_x","_x2","apply","this","arguments","App","setPlaces","_useState5","_useState6","bounds","_useState7","_useState8","setIsLoading","useEffect","navigator","geolocation","getCurrentPosition","_ref$coords","latitude","longitude","then","Fragment","components_Header","components_PlaceInfo","components_HomeMap","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d2d33a83.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>Travel Advisor</h1>\r\n      <h2>Travel your way</h2>\r\n      <div className=\"search\">\r\n        <input type=\"text\" placeholder=\"Search places...\" />\r\n        <FiSearch />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer, useMap, useMapEvent } from \"react-leaflet\";\r\n\r\nfunction HomeMap({ coordinates, setBounds, setCoordinates }) {\r\n  const SetViewOnClick = () => {\r\n    const map = useMapEvent(\"move\", () => {\r\n      const latLng = map.getBounds();\r\n\r\n      setCoordinates(latLng._northEast);\r\n      setBounds({ ne: latLng._northEast, sw: latLng._southWest });\r\n    });\r\n\r\n    return null;\r\n  };\r\n\r\n  function SetViewOnMove({ coords }) {\r\n    const map = useMap();\r\n    map.setView(coords, map.getZoom());\r\n\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <section className=\"leaflet-container\">\r\n      <MapContainer\r\n        // key={JSON.stringify(coordinates)}\r\n        center={coordinates}\r\n        zoom={14}\r\n        scrollWheelZoom={true}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <SetViewOnClick />\r\n        <SetViewOnMove coords={[coordinates]} />\r\n      </MapContainer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default HomeMap;\r\n","import React from \"react\";\r\n\r\nfunction SinglePlace({ place }) {\r\n  console.log(place);\r\n\r\n  return <div>SinglePlace</div>;\r\n}\r\n\r\nexport default SinglePlace;\r\n","import React, { useState } from \"react\";\r\nimport SinglePlace from \"./SinglePlace\";\r\n\r\nfunction PlaceInfo({ isLoading, places }) {\r\n  const [type, setType] = useState(\"restaurants\");\r\n  const [rating, setRating] = useState(\"\");\r\n\r\n  return (\r\n    <section className=\"placeInfo\">\r\n      <h1>Restaurants, Hotels & Attractions around you</h1>\r\n      {isLoading ? (\r\n        <div className=\"loading\">Loading...</div>\r\n      ) : (\r\n        <div className=\"filters\">\r\n          <label htmlFor=\"type\">Type</label>\r\n          <div>\r\n            <select\r\n              name=\"type\"\r\n              onChange={(e) => {\r\n                setType(e.target.value);\r\n                console.log(type);\r\n              }}\r\n            >\r\n              <option value=\"restaurants\">Restaurants</option>\r\n              <option value=\"hotels\">Hotels</option>\r\n              <option value=\"attractions\">Attractions</option>\r\n            </select>\r\n            <select\r\n              name=\"rating\"\r\n              onChange={(e) => {\r\n                setRating(e.target.value);\r\n                console.log(rating);\r\n              }}\r\n            >\r\n              <option value={0}>All</option>\r\n              <option value={3}>Above 3.0</option>\r\n              <option value={4}>Above 4.0</option>\r\n              <option value={4.5}>Above 4.5</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isLoading ? (\r\n        \"\"\r\n      ) : (\r\n        <div className=\"places\">\r\n          {places.map((place) => {\r\n            return <SinglePlace key={place.name} place={place} />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PlaceInfo;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl =\r\n  \"https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary\";\r\n\r\nexport const getPlaces = async (sw, ne) => {\r\n  const {\r\n    data: { data },\r\n  } = await axios.get(baseUrl, {\r\n    params: {\r\n      bl_latitude: sw.lat,\r\n      tr_latitude: ne.lat,\r\n      bl_longitude: sw.lng,\r\n      tr_longitude: ne.lng,\r\n    },\r\n    headers: {\r\n      \"X-RapidAPI-Host\": \"travel-advisor.p.rapidapi.com\",\r\n      \"X-RapidAPI-Key\": \"5fb1978683msh82118b802984d83p10f722jsn9b9b5a2d80cc\",\r\n    },\r\n  });\r\n\r\n  return data;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport HomeMap from \"./components/HomeMap\";\r\nimport PlaceInfo from \"./components/PlaceInfo\";\r\nimport { getPlaces } from \"./components/APIs\";\r\n\r\nfunction App() {\r\n  const [places, setPlaces] = useState([]);\r\n  const [coordinates, setCoordinates] = useState();\r\n  const [bounds, setBounds] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      ({ coords: { latitude, longitude } }) => {\r\n        setCoordinates({ lat: latitude, lng: longitude });\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (bounds) {\r\n      setIsLoading(true);\r\n      getPlaces(bounds.sw, bounds.ne).then((data) => {\r\n        setPlaces(data);\r\n        setIsLoading(false);\r\n      });\r\n    }\r\n  }, [coordinates, bounds]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <PlaceInfo isLoading={isLoading} places={places} />\r\n        <HomeMap\r\n          coordinates={coordinates}\r\n          setCoordinates={setCoordinates}\r\n          setBounds={setBounds}\r\n        />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./sass/css/main.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}