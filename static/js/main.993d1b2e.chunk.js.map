{"version":3,"sources":["components/Header.jsx","components/HomeMap.jsx","components/PlaceInfo.jsx","components/APIs.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","react_default","a","createElement","className","type","placeholder","index_esm","HomeMap","_ref","coordinates","setBounds","setCoordinates","console","log","MapContainer","key","JSON","stringify","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","map","useMapEvent","latLng","getBounds","_northEast","ne","sw","_southWest","PlaceInfo","_useState","useState","_useState2","Object","slicedToArray","setType","_useState3","_useState4","rating","setRating","htmlFor","name","onChange","e","target","value","place","options","method","headers","X-RapidAPI-Host","X-RapidAPI-Key","getPlaces","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","App","setPlaces","_useState5","_useState6","bounds","useEffect","navigator","geolocation","getCurrentPosition","_ref$coords","coords","latitude","longitude","lat","lng","then","Fragment","components_Header","components_PlaceInfo","components_HomeMap","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.993d1b2e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>Travel Advisor</h1>\r\n      <h2>Travel your way</h2>\r\n      <div className=\"search\">\r\n        <input type=\"text\" placeholder=\"Search places...\" />\r\n        <FiSearch />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer, Marker, useMapEvent } from \"react-leaflet\";\r\n\r\nfunction HomeMap({ coordinates, setBounds, setCoordinates }) {\r\n  const SetViewOnClick = () => {\r\n    const map = useMapEvent(\"move\", () => {\r\n      const latLng = map.getBounds();\r\n\r\n      setCoordinates(latLng._northEast);\r\n      setBounds({ ne: latLng._northEast, sw: latLng._southWest });\r\n    });\r\n\r\n    return null;\r\n  };\r\n\r\n  console.log(coordinates);\r\n\r\n  return (\r\n    <section className=\"leaflet-container\">\r\n      <MapContainer\r\n        key={JSON.stringify(coordinates)}\r\n        center={coordinates}\r\n        zoom={14}\r\n        scrollWheelZoom={true}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={coordinates}></Marker>\r\n        <SetViewOnClick />\r\n      </MapContainer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default HomeMap;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction PlaceInfo() {\r\n  const [type, setType] = useState(\"restaurants\");\r\n  const [rating, setRating] = useState(\"\");\r\n\r\n  const places = [\r\n    { name: \"Caffe\" },\r\n    { name: \"Bar\" },\r\n    { name: \"Restaurant\" },\r\n    { name: \"Hotel\" },\r\n    { name: \"Pub\" },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"placeInfo\">\r\n      <h1>Restaurants, Hotels & Attractions around you</h1>\r\n      <div className=\"filters\">\r\n        <label htmlFor=\"type\">Type</label>\r\n        <div>\r\n          <select\r\n            name=\"type\"\r\n            onChange={(e) => {\r\n              setType(e.target.value);\r\n              console.log(type);\r\n            }}\r\n          >\r\n            <option value=\"restaurants\">Restaurants</option>\r\n            <option value=\"hotels\">Hotels</option>\r\n            <option value=\"attractions\">Attractions</option>\r\n          </select>\r\n          <select\r\n            name=\"rating\"\r\n            onChange={(e) => {\r\n              setRating(e.target.value);\r\n              console.log(rating);\r\n            }}\r\n          >\r\n            <option value={0}>All</option>\r\n            <option value={3}>Above 3.0</option>\r\n            <option value={4}>Above 4.0</option>\r\n            <option value={4.5}>Above 4.5</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"places\">\r\n        {places.map((place) => {\r\n          return <h1 key={place.name}>{place.name}</h1>;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PlaceInfo;\r\n","// import axios from \"axios\";\r\n\r\nconst baseUrl =\r\n  \"https://travel-advisor.p.rapidapi.com/locations/v2/auto-complete?query=eiffel%20tower&lang=en_US&units=km\";\r\n\r\n// const options = {\r\n//   params: {\r\n//     bl_latitude: \"11.847676\",\r\n//     tr_latitude: \"12.838442\",\r\n//     bl_longitude: \"109.095887\",\r\n//     tr_longitude: \"109.149359\",\r\n//   },\r\n//   headers: {\r\n//     \"x-rapidapi-key\": \"689bdba840msh627580b0402dd16p1bbcc9jsn0188595ae046\",\r\n//     \"x-rapidapi-host\": \"travel-advisor.p.rapidapi.com\",\r\n//   },\r\n// };\r\n\r\n// export const getPlaces = async () => {\r\n//   try {\r\n//     const {\r\n//       data: { data },\r\n//     } = await axios.get(baseUrl, options);\r\n\r\n//     return data;\r\n//   } catch (error) {\r\n//     console.log(error);\r\n//   }\r\n// };\r\n\r\nconst options = {\r\n  method: \"GET\",\r\n  headers: {\r\n    \"X-RapidAPI-Host\": \"travel-advisor.p.rapidapi.com\",\r\n    \"X-RapidAPI-Key\": \"689bdba840msh627580b0402dd16p1bbcc9jsn0188595ae046\",\r\n  },\r\n};\r\n\r\nexport const getPlaces = async () => {\r\n  const response = await fetch(baseUrl, options);\r\n  const data = await response.json();\r\n\r\n  return data;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport HomeMap from \"./components/HomeMap\";\r\nimport PlaceInfo from \"./components/PlaceInfo\";\r\nimport { getPlaces } from \"./components/APIs\";\r\n\r\nfunction App() {\r\n  const [places, setPlaces] = useState([]);\r\n  const [coordinates, setCoordinates] = useState();\r\n  const [bounds, setBounds] = useState(null);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      ({ coords: { latitude, longitude } }) => {\r\n        setCoordinates({ lat: latitude, lng: longitude });\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  console.log(coordinates);\r\n\r\n  useEffect(() => {\r\n    getPlaces().then((data) => {\r\n      setPlaces(data.data);\r\n    });\r\n  }, [coordinates, bounds]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <PlaceInfo />\r\n        <HomeMap\r\n          coordinates={coordinates}\r\n          setCoordinates={setCoordinates}\r\n          setBounds={setBounds}\r\n        />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./sass/css/main.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}