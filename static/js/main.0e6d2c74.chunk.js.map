{"version":3,"sources":["components/Header.jsx","components/HomeMap.jsx","components/SinglePlace.jsx","components/PlaceInfo.jsx","components/APIs.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","react_default","a","createElement","className","type","placeholder","index_esm","HomeMap","_ref","setBounds","_useState","useState","_useState2","Object","slicedToArray","coordinates","setCoordinates","useEffect","navigator","geolocation","getCurrentPosition","_ref2","_ref2$coords","coords","latitude","longitude","lat","lng","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","useMapEvent","latLng","getBounds","_northEast","ne","sw","_southWest","SinglePlace","place","console","log","src","photo","images","large","title","name","rating","price_level","ranking","awards","award","small","display_name","cuisine","address","phone","size","color","onClick","window","open","web_url","website","PlaceInfo","isLoading","places","setType","_useState3","_useState4","setRating","htmlFor","onChange","e","target","value","components_SinglePlace","key","getPlaces","asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","params","bl_latitude","tr_latitude","bl_longitude","tr_longitude","headers","X-RapidAPI-Host","X-RapidAPI-Key","sent","abrupt","stop","_x","_x2","apply","this","arguments","App","setPlaces","bounds","_useState5","_useState6","setIsLoading","then","Fragment","components_Header","components_PlaceInfo","components_HomeMap","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App","document","getElementById"],"mappings":"4MAgBeA,MAbf,WACE,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OAAOC,YAAY,qBAC/BL,EAAAC,EAAAC,cAACI,EAAA,EAAD,iCCgCOC,MAvCf,SAAAC,GAAgC,IAAbC,EAAaD,EAAbC,UAAaC,EACQC,qBADRC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvBK,EADuBH,EAAA,GACVI,EADUJ,EAAA,GAG9BK,oBAAU,WACRC,UAAUC,YAAYC,mBACpB,SAAAC,GAAyC,IAAAC,EAAAD,EAAtCE,OAAUC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,UACrBT,EAAe,CAAEU,IAAKF,EAAUG,IAAKF,OAGxC,IAaH,OACEzB,EAAAC,EAAAC,cAAA,WAASC,UAAU,qBAChBY,EACCf,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAcC,OAAQd,EAAae,KAAM,GAAIC,iBAAiB,GAC5D/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CACEC,YAAY,wFACZC,IAAI,uDAENlC,EAAAC,EAAAC,cAnBe,WACrB,IAAMiC,EAAMC,YAAY,OAAQ,WAC9B,IAAMC,EAASF,EAAIG,YAEnBtB,EAAeqB,EAAOE,YACtB9B,EAAU,CAAE+B,GAAIH,EAAOE,WAAYE,GAAIJ,EAAOK,eAGhD,OAAO,MAWD,OAGF,KCYOC,MA9Cf,SAAAnC,GAAgC,IAAToC,EAASpC,EAAToC,MAGrB,OAFAC,QAAQC,IAAIF,GAGV5C,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,OACE6C,IACEH,EAAMI,MACFJ,EAAMI,MAAMC,OAAOC,MAAMhB,IACzB,sGAENiB,MAAOP,EAAMQ,OAEfpD,EAAAC,EAAAC,cAAA,UAAK0C,EAAMQ,MACXpD,EAAAC,EAAAC,cAAA,UAAK0C,EAAMS,QACXrD,EAAAC,EAAAC,cAAA,UAAK0C,EAAMU,aACXtD,EAAAC,EAAAC,cAAA,UAAK0C,EAAMW,SACVX,EAAMY,OAAOrB,IAAI,SAACsB,GAAD,OAChBzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK6C,IAAKU,EAAMR,OAAOS,QACvB1D,EAAAC,EAAAC,cAAA,UAAKuD,EAAME,iBAGdf,EAAMgB,QAAQzB,IAAI,SAAAd,GAAA,IAAG+B,EAAH/B,EAAG+B,KAAH,OACjBpD,EAAAC,EAAAC,cAAA,UAAKkD,KAENR,EAAMiB,SAAW7D,EAAAC,EAAAC,cAAA,UAAK0C,EAAMiB,SAC5BjB,EAAMkB,OAAS9D,EAAAC,EAAAC,cAAA,UAAK0C,EAAMkB,OAC3B9D,EAAAC,EAAAC,cAAA,UACE6D,KAAK,QACLC,MAAM,UACNC,QAAS,kBAAMC,OAAOC,KAAKvB,EAAMwB,QAAS,YAH5C,gBAOApE,EAAAC,EAAAC,cAAA,UACE6D,KAAK,QACLC,MAAM,UACNC,QAAS,kBAAMC,OAAOC,KAAKvB,EAAMyB,QAAS,YAH5C,aCkBSC,MApDf,SAAA9D,GAA0C,IAArB+D,EAAqB/D,EAArB+D,UAAWC,EAAUhE,EAAVgE,OAAU9D,EAChBC,mBAAS,eADOC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjCN,EADiCQ,EAAA,GAC3B6D,EAD2B7D,EAAA,GAAA8D,EAEZ/D,mBAAS,IAFGgE,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAEjCrB,EAFiCsB,EAAA,GAEzBC,EAFyBD,EAAA,GAIxC,OACE3E,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACjBH,EAAAC,EAAAC,cAAA,0DACCqE,EACCvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,cAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,QAAf,QACA7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEkD,KAAK,OACL0B,SAAU,SAACC,GACTN,EAAQM,EAAEC,OAAOC,OACjBpC,QAAQC,IAAI1C,KAGdJ,EAAAC,EAAAC,cAAA,UAAQ+E,MAAM,eAAd,eACAjF,EAAAC,EAAAC,cAAA,UAAQ+E,MAAM,UAAd,UACAjF,EAAAC,EAAAC,cAAA,UAAQ+E,MAAM,eAAd,gBAEFjF,EAAAC,EAAAC,cAAA,UACEkD,KAAK,SACL0B,SAAU,SAACC,GACTH,EAAUG,EAAEC,OAAOC,OACnBpC,QAAQC,IAAIO,KAGdrD,EAAAC,EAAAC,cAAA,UAAQ+E,MAAO,GAAf,OACAjF,EAAAC,EAAAC,cAAA,UAAQ+E,MAAO,GAAf,aACAjF,EAAAC,EAAAC,cAAA,UAAQ+E,MAAO,GAAf,aACAjF,EAAAC,EAAAC,cAAA,UAAQ+E,MAAO,KAAf,gBAKPV,EACC,GAEAvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACZqE,EAAOrC,IAAI,SAACS,GACX,OAAO5C,EAAAC,EAAAC,cAACgF,EAAD,CAAaC,IAAKvC,EAAMQ,KAAMR,MAAOA,mzMC7CxD,IAGawC,EAAS,eAAA5E,EAAAK,OAAAwE,EAAA,EAAAxE,CAAAyE,IAAAC,KAAG,SAAAC,EAAO/C,EAAID,GAAX,IAAAiD,EAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGbC,IAAMC,IALhB,qEAK6B,CAC3BC,OAAQ,CACNC,YAAazD,EAAGf,IAChByE,YAAa3D,EAAGd,IAChB0E,aAAc3D,EAAGd,IACjB0E,aAAc7D,EAAGb,KAEnB2E,QAAS,CACPC,kBAAmB,gCACnBC,iBAAkB,wDAZC,cAAAf,EAAAG,EAAAa,KAEbf,EAFaD,EAErBC,KAAQA,KAFaE,EAAAc,OAAA,SAgBhBhB,GAhBgB,wBAAAE,EAAAe,SAAAnB,MAAH,gBAAAoB,EAAAC,GAAA,OAAArG,EAAAsG,MAAAC,KAAAC,YAAA,GC2BPC,MA1Bf,WAAe,IAAAvG,EACeC,mBAAS,IADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACN8D,EADM5D,EAAA,GACEsG,EADFtG,EAAA,GAAA8D,EAEe/D,mBAAS,MAFxBgE,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAENyC,EAFMxC,EAAA,GAEElE,EAFFkE,EAAA,GAAAyC,EAGqBzG,oBAAS,GAH9B0G,EAAAxG,OAAAC,EAAA,EAAAD,CAAAuG,EAAA,GAGN7C,EAHM8C,EAAA,GAGKC,EAHLD,EAAA,GAeb,OAVApG,oBAAU,WACJkG,IACFG,GAAa,GACblC,EAAU+B,EAAO1E,GAAI0E,EAAO3E,IAAI+E,KAAK,SAAC7B,GACpCwB,EAAUxB,GACV4B,GAAa,OAGhB,CAACH,IAGFnH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuH,SAAA,KACExH,EAAAC,EAAAC,cAACuH,EAAD,MACAzH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACwH,EAAD,CAAWnD,UAAWA,EAAWC,OAAQA,IACzCxE,EAAAC,EAAAC,cAACyH,EAAD,CAASlH,UAAWA,OCdbmH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAhD,EAAA,GAAAwC,KAAAQ,EAAAC,KAAA,UAAqBT,KAAK,SAAA/G,GAAiD,IAA9CyH,EAA8CzH,EAA9CyH,OAAQC,EAAsC1H,EAAtC0H,OAAQC,EAA8B3H,EAA9B2H,OAAQC,EAAsB5H,EAAtB4H,OAAQC,EAAc7H,EAAd6H,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,YCDdS,IAASC,OAAOvI,EAAAC,EAAAC,cAACsI,EAAD,MAASC,SAASC,eAAe,SAKjDd","file":"static/js/main.0e6d2c74.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>Travel Advisor</h1>\r\n      <h2>Travel your way</h2>\r\n      <div className=\"search\">\r\n        <input type=\"text\" placeholder=\"Search places...\" />\r\n        <FiSearch />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, useMap, useMapEvent } from \"react-leaflet\";\r\n\r\nfunction HomeMap({ setBounds }) {\r\n  const [coordinates, setCoordinates] = useState();\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      ({ coords: { latitude, longitude } }) => {\r\n        setCoordinates({ lat: latitude, lng: longitude });\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const SetViewOnClick = () => {\r\n    const map = useMapEvent(\"move\", () => {\r\n      const latLng = map.getBounds();\r\n\r\n      setCoordinates(latLng._northEast);\r\n      setBounds({ ne: latLng._northEast, sw: latLng._southWest });\r\n    });\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <section className=\"leaflet-container\">\r\n      {coordinates ? (\r\n        <MapContainer center={coordinates} zoom={14} scrollWheelZoom={true}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          <SetViewOnClick />\r\n        </MapContainer>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default HomeMap;\r\n","import React from \"react\";\r\n\r\nfunction SinglePlace({ place }) {\r\n  console.log(place);\r\n\r\n  return (\r\n    <section>\r\n      <img\r\n        src={\r\n          place.photo\r\n            ? place.photo.images.large.url\r\n            : \"https://www.foodserviceandhospitality.com/wp-content/uploads/2016/09/Restaurant-Placeholder-001.jpg\"\r\n        }\r\n        title={place.name}\r\n      />\r\n      <h5>{place.name}</h5>\r\n      <h2>{place.rating}</h2>\r\n      <h1>{place.price_level}</h1>\r\n      <h2>{place.ranking}</h2>\r\n      {place.awards.map((award) => (\r\n        <div>\r\n          <img src={award.images.small} />\r\n          <h1>{award.display_name}</h1>\r\n        </div>\r\n      ))}\r\n      {place.cuisine.map(({ name }) => (\r\n        <h1>{name}</h1>\r\n      ))}\r\n      {place.address && <h3>{place.address}</h3>}\r\n      {place.phone && <h1>{place.phone}</h1>}\r\n      <button\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        onClick={() => window.open(place.web_url, \"_blank\")}\r\n      >\r\n        Trip Advisor\r\n      </button>\r\n      <button\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        onClick={() => window.open(place.website, \"_blank\")}\r\n      >\r\n        Website\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SinglePlace;\r\n","import React, { useState } from \"react\";\r\nimport SinglePlace from \"./SinglePlace\";\r\n\r\nfunction PlaceInfo({ isLoading, places }) {\r\n  const [type, setType] = useState(\"restaurants\");\r\n  const [rating, setRating] = useState(\"\");\r\n\r\n  return (\r\n    <section className=\"placeInfo\">\r\n      <h1>Restaurants, Hotels & Attractions around you</h1>\r\n      {isLoading ? (\r\n        <div className=\"loading\">Loading...</div>\r\n      ) : (\r\n        <div className=\"filters\">\r\n          <label htmlFor=\"type\">Type</label>\r\n          <div>\r\n            <select\r\n              name=\"type\"\r\n              onChange={(e) => {\r\n                setType(e.target.value);\r\n                console.log(type);\r\n              }}\r\n            >\r\n              <option value=\"restaurants\">Restaurants</option>\r\n              <option value=\"hotels\">Hotels</option>\r\n              <option value=\"attractions\">Attractions</option>\r\n            </select>\r\n            <select\r\n              name=\"rating\"\r\n              onChange={(e) => {\r\n                setRating(e.target.value);\r\n                console.log(rating);\r\n              }}\r\n            >\r\n              <option value={0}>All</option>\r\n              <option value={3}>Above 3.0</option>\r\n              <option value={4}>Above 4.0</option>\r\n              <option value={4.5}>Above 4.5</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {isLoading ? (\r\n        \"\"\r\n      ) : (\r\n        <div className=\"places\">\r\n          {places.map((place) => {\r\n            return <SinglePlace key={place.name} place={place} />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PlaceInfo;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl =\r\n  \"https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary\";\r\n\r\nexport const getPlaces = async (sw, ne) => {\r\n  const {\r\n    data: { data },\r\n  } = await axios.get(baseUrl, {\r\n    params: {\r\n      bl_latitude: sw.lat,\r\n      tr_latitude: ne.lat,\r\n      bl_longitude: sw.lng,\r\n      tr_longitude: ne.lng,\r\n    },\r\n    headers: {\r\n      \"X-RapidAPI-Host\": \"travel-advisor.p.rapidapi.com\",\r\n      \"X-RapidAPI-Key\": \"e71ebc51c6mshca00d73c78e6902p19258fjsn376d240cbe35\",\r\n    },\r\n  });\r\n\r\n  return data;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport HomeMap from \"./components/HomeMap\";\r\nimport PlaceInfo from \"./components/PlaceInfo\";\r\nimport { getPlaces } from \"./components/APIs\";\r\n\r\nfunction App() {\r\n  const [places, setPlaces] = useState([]);\r\n  const [bounds, setBounds] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (bounds) {\r\n      setIsLoading(true);\r\n      getPlaces(bounds.sw, bounds.ne).then((data) => {\r\n        setPlaces(data);\r\n        setIsLoading(false);\r\n      });\r\n    }\r\n  }, [bounds]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <PlaceInfo isLoading={isLoading} places={places} />\r\n        <HomeMap setBounds={setBounds} />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./sass/css/main.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}