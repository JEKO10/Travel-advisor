{"version":3,"sources":["components/Header.jsx","components/HomeMap.jsx","components/PlaceInfo.jsx","components/APIs.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","react_default","a","createElement","className","type","placeholder","index_esm","HomeMap","_ref","coordinates","setBounds","setCoordinates","MapContainer","key","JSON","stringify","center","zoom","scrollWheelZoom","TileLayer","attribution","url","Marker","position","map","useMapEvent","latLng","getBounds","_northEast","ne","sw","_southWest","PlaceInfo","_useState","useState","_useState2","Object","slicedToArray","setType","_useState3","_useState4","rating","setRating","htmlFor","name","onChange","e","target","value","console","log","place","getPlaces","asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","axios","get","params","bl_latitude","lat","tr_latitude","bl_longitude","lng","tr_longitude","headers","X-RapidAPI-Host","X-RapidAPI-Key","sent","abrupt","stop","_x","_x2","apply","this","arguments","App","setPlaces","_useState5","_useState6","bounds","useEffect","navigator","geolocation","getCurrentPosition","_ref$coords","coords","latitude","longitude","then","Fragment","components_Header","components_PlaceInfo","components_HomeMap","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1636434b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1>Travel Advisor</h1>\r\n      <h2>Travel your way</h2>\r\n      <div className=\"search\">\r\n        <input type=\"text\" placeholder=\"Search places...\" />\r\n        <FiSearch />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer, Marker, useMapEvent } from \"react-leaflet\";\r\n\r\nfunction HomeMap({ coordinates, setBounds, setCoordinates }) {\r\n  const SetViewOnClick = () => {\r\n    const map = useMapEvent(\"move\", () => {\r\n      const latLng = map.getBounds();\r\n\r\n      setCoordinates(latLng._northEast);\r\n      setBounds({ ne: latLng._northEast, sw: latLng._southWest });\r\n    });\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <section className=\"leaflet-container\">\r\n      <MapContainer\r\n        key={JSON.stringify(coordinates)}\r\n        center={coordinates}\r\n        zoom={14}\r\n        scrollWheelZoom={true}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={coordinates}></Marker>\r\n        <SetViewOnClick />\r\n      </MapContainer>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default HomeMap;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction PlaceInfo() {\r\n  const [type, setType] = useState(\"restaurants\");\r\n  const [rating, setRating] = useState(\"\");\r\n\r\n  const places = [\r\n    { name: \"Caffe\" },\r\n    { name: \"Bar\" },\r\n    { name: \"Restaurant\" },\r\n    { name: \"Hotel\" },\r\n    { name: \"Pub\" },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"placeInfo\">\r\n      <h1>Restaurants, Hotels & Attractions around you</h1>\r\n      <div className=\"filters\">\r\n        <label htmlFor=\"type\">Type</label>\r\n        <div>\r\n          <select\r\n            name=\"type\"\r\n            onChange={(e) => {\r\n              setType(e.target.value);\r\n              console.log(type);\r\n            }}\r\n          >\r\n            <option value=\"restaurants\">Restaurants</option>\r\n            <option value=\"hotels\">Hotels</option>\r\n            <option value=\"attractions\">Attractions</option>\r\n          </select>\r\n          <select\r\n            name=\"rating\"\r\n            onChange={(e) => {\r\n              setRating(e.target.value);\r\n              console.log(rating);\r\n            }}\r\n          >\r\n            <option value={0}>All</option>\r\n            <option value={3}>Above 3.0</option>\r\n            <option value={4}>Above 4.0</option>\r\n            <option value={4.5}>Above 4.5</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"places\">\r\n        {places.map((place) => {\r\n          return <h1 key={place.name}>{place.name}</h1>;\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PlaceInfo;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl =\r\n  \"https://travel-advisor.p.rapidapi.com/restaurants/list-in-boundary\";\r\n\r\nexport const getPlaces = async (sw, ne) => {\r\n  const {\r\n    data: { data },\r\n  } = await axios.get(baseUrl, {\r\n    params: {\r\n      bl_latitude: sw.lat,\r\n      tr_latitude: ne.lat,\r\n      bl_longitude: sw.lng,\r\n      tr_longitude: ne.lng,\r\n    },\r\n    headers: {\r\n      \"X-RapidAPI-Host\": \"travel-advisor.p.rapidapi.com\",\r\n      \"X-RapidAPI-Key\": \"5fb1978683msh82118b802984d83p10f722jsn9b9b5a2d80cc\",\r\n    },\r\n  });\r\n\r\n  return data;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport HomeMap from \"./components/HomeMap\";\r\nimport PlaceInfo from \"./components/PlaceInfo\";\r\nimport { getPlaces } from \"./components/APIs\";\r\n\r\nfunction App() {\r\n  const [places, setPlaces] = useState([]);\r\n  const [coordinates, setCoordinates] = useState();\r\n  const [bounds, setBounds] = useState(null);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      ({ coords: { latitude, longitude } }) => {\r\n        setCoordinates({ lat: latitude, lng: longitude });\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getPlaces(bounds.sw, bounds.ne).then((data) => {\r\n      setPlaces(data);\r\n    });\r\n  }, [coordinates, bounds]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main>\r\n        <PlaceInfo />\r\n        <HomeMap\r\n          coordinates={coordinates}\r\n          setCoordinates={setCoordinates}\r\n          setBounds={setBounds}\r\n        />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"./sass/css/main.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}